.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
library(raster)
r1<-readRDS("C:/Users/Aadde/Downloads/hydro_mask/ch_mask_hydro_bafu.rds")
r2<-readRDS("C:/Users/Aadde/Downloads/hydro_mask/ch_mask_hydro_tlm3d.rds")
r1
r2
rr<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/bafu/pixel/oekomorphology/ch_hydro_bafu_pixel_oekomorphology_cl2_25.rds")
rr
writeRaster(r2, "C:/Users/Aadde/Downloads/hydro_mask/ch_mask_hydro_tlm3d.tif")
writeRaster(r1, "C:/Users/Aadde/Downloads/hydro_mask/ch_mask_hydro_bafu.rds")
r2
r1
writeRaster(r1, "C:/Users/Aadde/Downloads/hydro_mask/ch_mask_hydro_bafu.tif")
rr
r3<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d.rds")
r3
writeRaster(r3, "C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d.tif")
help(prop.table)
??findInterval
help(between)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/bafu/pixel/dischargea/ch_hydro_bafu_pixel_dischargea_max_100.rds")
r
plot(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/bafu/pixel/oekomorphology/ch_hydro_bafu_pixel_oekomorphology_1000.rds")
r
plot(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/swisstopo/pixel/slope/ch_hydro_swisstopo_pixel_slope_max_100.rds")
plot(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/topo/alti3d2016/pixel/slope/ch_topo_alti3d2016_pixel_slope_max2m_100.rds")
plot(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/zappa/pixel/gwn/ch_hydro_zappa_pixel_gwn_100.rds")
plot(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/zappa/pixel/rc/ch_hydro_zappa_pixel_rc_100.rds")
plot(r)
k<-which(r[]==0)
head(k)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/zappa/pixel/gwn/ch_hydro_zappa_pixel_gwn_100.rds")
r
k<-which(r[]==0)
r[k]<-1000
plot(r)
k<-which(r[]==NA)
r[k]<--999
plot(r)
r
r
r
r
head(k)
min(k)
min(tr)
min(r)
r<-readRDS("C:/Users/Aadde/switchdrive/CH-BMG/data/predictors/ch/hydro/zappa/pixel/gwn/ch_hydro_zappa_pixel_gwn_100.rds")
min(r)
r
min(r[])
min(na.omit(r[]))
r
writeRaster(r, "C:/Users/Aadde/Downloads/zap.tif")
r
r
writeRaster(r, "C:/Users/Aadde/Downloads/zap.tif")
writeRaster(r, "C:/Users/Aadde/Downloads/zap2.tif")
l<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_lakes.rds")
plot(l)
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
r
l
merge(l,r)
help(merge)
l[which(l[]==1)]<-"l"
l
plot(l)
table(l[])
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
r[which(r[]==1)]<-"r"
rl<-merge(l,r)
r
l
l<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_lakes.rds")
l[which(l[]==1)]<-as.factor("l")
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
r[which(r[]==1)]<-as.factor("r")
plot(l)
plot(r)
r
l
unique(r[])
l<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_lakes.rds")
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
r[which(r[]==1)]<-2
rl<-merge(l,r)
plot(rl)
rl
writeRaster(rl, "C:/Users/Aadde/Downloads/k.tif")
l<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_lakes.rds")
l[which(l[]==0)]<-NA
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
r[which(r[]==1)]<-2
rl<-merge(l,r)
plot(rl)
writeRaster(rl, "C:/Users/Aadde/Downloads/k2.tif")
writeRaster(rl, "C:/Users/Aadde/Downloads/k23.tif")
plot(rl)
l<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_lakes.rds")
l[which(l[]==0)]<-NA
r<-readRDS("C:/Users/Aadde/Downloads/ch_mask_hydro_tlm3d_rivers.rds")
rl<-merge(l,r)
plot(rl)
writeRaster(rl, "C:/Users/Aadde/Downloads/k25.tif")
rl
r
l
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
isp<-fread("Z:/projects-ext/ValPar/data/infospecies/VALPAR_v1.tsv")
head(isp)
table(isp$SCIENTIFICNAME)
head(isp, 200)
head(isp@data, 200)
isp$SCIENTIFICNAME[1:200]
grep("Cyprinus carpio", isp$SCIENTIFICNAME)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
isp<-fread("Z:/projects-ext/ValPar/data/infospecies/VALPAR_v1.tsv")
isp<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1.tsv")
head(isp)
isp_f<-isp[grep("Fish", isp$DATASETNAME),]
head(isp_f)
table(isp_f$SCIENTIFICNAME)
head(isp)
unique(isp$DATASETNAME)
isp_f<-isp[grep("Fish", isp$DATASETNAME),]
isp_a<-isp[grep("Amphibia", isp$DATASETNAME),]
table(isp_a$SCIENTIFICNAME)
isp_a<-isp[grep("Aegy", isp$SCIENTIFICNAME),]
isp_a
isp_b<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/data/infospecies/VALPAR_v1_SOI.tsv")
isp_b<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1_SOI.tsv")
isp_b<-isp_b[grep("Cygnus", isp$SCIENTIFICNAME),]
isp_b
isp_b<-isp_b[grep("Cygnus", ispb$SCIENTIFICNAME),]
isp_b<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1_SOI.tsv")
isp_b<-isp_b[grep("Cygnus", isp_b$SCIENTIFICNAME),]
isp_b
unique(isp_b$SCIENTIFICNAME)
isp_b<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1_SOI.tsv")
unique(isp_b$SCIENTIFICNAME)
table(isp_b$SCIENTIFICNAME)
sp<-readRDS("C:/Users/Aadde/Desktop/isp_reproj_clean_short.rds")
head(sp)
help("scale")
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
isp<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1.tsv")
isp_cg<-isp[isp$SCIENTIFICNAME=="Cotus gobio",]
isp_cg
isp_cg<-isp[isp$SCIENTIFICNAME=="Cottus gobio",]
isp_cg
head(isp)
isp_cg<-isp[grep("Cottus go,'isp$SCIENTIFICNAME),]
isp_cg<-isp[grep("Cottus go",isp$SCIENTIFICNAME),]
isp_cg
table(isp_cg$COORDINATEUNCERTAINTYINMETERS)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
library(raster)
library(regvis)
library(visreg)
install.packages("visreg")
library(visreg)
hm<-readRDS("W:/FAC/FGSE/IDYST/aguisan/valpar/D2c/outputs/valpar-pipeline/d2_models/loc/covariate/Carex limosa/gam/Carex limosa_gam.rds")
fun<-list.files("C:/Users/Aadde/switchdrive/Private/pipeline-git/pipeline/uptodate/scripts_hpc/functions/", pattern=".R", full.names = T, recursive = T)
fun
lapply(fun, source)
hmm<-hm@fits$replicate_01$`gam-3`
visreg(hmm)
visreg(hmm, data=hmm$data)
hmm
hmm$data
head(hmm$model)
visreg(hmm, data=hmm$model)
hmm$model
visreg(hmm, data=hmm$model)
class(hmm)
visreg(hmm, data=hmm$model[,1:10])
visreg(hmm, data=hmm$model[,1:11])
hm<-readRDS("W:/FAC/FGSE/IDYST/aguisan/valpar/D2c/outputs/valpar-pipeline/d2_models/loc/covariate/Carex limosa/glm/Carex limosa_glm.rds")
hmm<-hm@fits$replicate_01$`glm-1`
visreg(hmm, data=hmm$model)
hmm<-hm@fits$replicate_01$`glm-1`
visreg(hmm, data=hmm$data)
help(visreg)
visreg(hmm, "Presence", data=hmm$data)
visreg(hmm, "Presence", by="ch_vege_nfi_pixel_canopy_max", data=hmm$data)
k<-visreg(hmm, "Presence", by="ch_vege_nfi_pixel_canopy_max", data=hmm$data)
str(k)
k<-visreg(hmm, "Presence", data=hmm$data)
str(k)
k<-visreg(hmm, data=hmm$data)
str(k)
hmm$data
str(hmm$data)
hmm$data$Presence<-as.factor(hmm$data$Presence)
k<-visreg(hmm, data=hmm$data)
k<-visreg(hmm, "Presence" data=hmm$data)
k<-visreg(hmm, "Presence", data=hmm$data)
class(hmm)
class(hmm)<-"lm"
class(hmm)
k<-visreg(hmm, "Presence", data=hmm$data)
k<-visreg(hmm, data=hmm$data)
k<-visreg(hmm,data=hmm$data)
class(hmm)
summary(hmm)
k<-visreg(hmm,data=hmm$data)
str(hmm$data)
k<-visreg(hmm,data=hmm$data)
k<-visreg(hmm,data=hmm$data, scale="response")
k<-visreg(hmm,data=hmm$data, scale="response", type="conditional")
k<-visreg(hmm, "Presence", data=hmm$data, scale="response", type="conditional")
hmm$data$Presence
hmm
class(hmm)<-"glm"
k<-visreg(hmm, data=hmm$data)
class(hmm)
k<-visreg(hmm,data=hmm$data,type="conditional")
class(hmm)
class(hmm)<-'lm'
k<-visreg(hmm,data=hmm$data,type="conditional")
k<-visreg(hmm,data=hmm$data,scale="response")
library(ggeffects)
install.packages("ggeffects")
names(hmm$data)
names(hmm$data)[-"Presence"]
names(hmm$data)[-1]
hmm
hm<-readRDS("W:/FAC/FGSE/IDYST/aguisan/valpar/D2c/outputs/valpar-pipeline/d2_models/loc/covariate/Carex limosa/glm/Carex limosa_glm.rds")
hmm<-hm@fits$replicate_01$`glm-1`
k<-visreg(hmm, data=hmm$dat
tibble(elements=names(hmm$data)[-1]), fit=list(hmm))
k<-visreg(hmm, data=hmm$dat
tibble(elements=names(hmm$data)[-1]), fit=list(hmm))
tibble(elements=names(hmm$data)[-1]), fit=list(hmm))
tibble(elements=names(hmm$data)[-1], fit=list(hmm))
mydf <- ggpredict(hmm, terms = c("mainGLO"))
library(ggeffects)
mydf <- ggpredict(hmm, terms = c("mainGLO"))
str(hm@fits$replicate_01$`glm-1`)
str(hm@fits$replicate_01$`glm-1`$R
)
library(sjPlot)
install.packages("sjPlot")
library(sjPlot)
mydf <- plot_model(hmm, terms = c("mainGLO"))
library(margins)
install.packages("margins")
library(margins)
m <- margins(hmm, data = hmm$data)
library(lme4)
m <- margins(hmm, data = hmm$data)
??poly
poly(1:100,2)
m <- margins(hmm, data = hmm$data)
margins_summary(hmm)
hm<-readRDS("W:/FAC/FGSE/IDYST/aguisan/valpar/D2c/outputs/valpar-pipeline/d2_models/loc/covariate/Carex limosa/gam/Carex limosa_gam.rds")
hmm<-hm@fits$replicate_01$`gam-3`
margins(hmm)
class(hmm)
class(hmm)<-"gam"
margins(hmm)
class(hmm)<-"glm"
margins(hmm)
install.packages("marginaleffects")
plot_cme(hmm)
library(marginaleffects)
plot_cme(hmm)
plot_cme(hmm, effect="mainGLO")
mfx <- marginaleffects(hmm)
class(hmm)<-"gam"
mfx <- marginaleffects(hmm)
install.packages("visibly")
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
cov.path<-"W:/FAC/FGSE/IDYST/aguisan/valpar/D2c/outputs/valpar-pipeline/d0_datasets/base/"
files<-list.files(cov.path)
files
files<-list.files(cov.path, full.names = T, recursive = T)
head(files)
fun<-list.files("C:/Users/Aadde/switchdrive/Private/pipeline-git/pipeline/uptodate/scripts_hpc/functions/", pattern=".R", full.names = T, recursive = T)
lapply(fun, source)
readRDS(files[1])
# Gather
s<-readRDS(files[1])
str(s)
# Gather
s<-readRDS(files[1])$aqua_terr_amph
s
lapply(1:length(files), function(x){
readRDS(files[1])$aqua_terr_amph})
wo<-lapply(1:length(files), function(x){
readRDS(files[x])$aqua_terr_amph})
wo
unlist(wo)
groups<-unlist(wo)
table(groups)
species<-list.files(cov.path)
aqua<-which(groups)=="aqua_r"
aqua<-which(groups=="aqua_r")
aqua
aqua<-species[which(groups=="aqua_r")]
species
aqua
head(files)
head(species)
x
x=10
kuq<-readRDS(files[x])$aqua_terr_amph)
kuq<-readRDS(files[x]))
kuq<-readRDS(files[x])
str(kuq)
aqua_terr_amph_l<-lapply(1:length(files), function(x){
readRDS(files[x])$aqua_terr_amph})
aqua_terr_amph<-unlist(aqua_terr_amph_l)
group_l<-lapply(1:length(files), function(x){
readRDS(files[x])$group})
wo<-data.frame(group=group, aqua_terr_amph=aqua_terr_amph)
group
group<-unlist(group_l)
wo<-data.frame(group=group, aqua_terr_amph=aqua_terr_amph)
head(wo)
res<-data.frame(group=group, aqua_terr_amph=aqua_terr_amph)
res_aqua<-res[res$aqua_terr_amph=="aqua_r",]
res_aqua
species[1261 ]
species[1335]
species[274]
species[275]
species[890]
species[132]
species[232]
species[1533]
res_terr<-res[res$aqua_terr_amph!="aqua_r",]
res_terr
table(res_terr$group)
res_terr[res_terr$group=="Bivalvia                          "]
res_terr[res_terr$group=="Bivalvia",]
species(1159)
species[1159]
res_terr[res_terr$group=="Actinopterygii",]
species[476]
species[1649]
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
isp<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1.tsv")
isp
isp$SCIENTIFICNAME[1:10]
grep("Cant",isp$SCIENTIFICNAME, value=T)
grep("Cantharellus cibarius",isp$SCIENTIFICNAME, value=T)
isp[grep("Cantharellus cibarius",isp$SCIENTIFICNAME),]
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library("devtools")
library("roxygen2")
install.packages("roxygen2")
library("devtools")
library("roxygen2")
#set config
usethis::use_git_config(user.name = "AnAdde", user.email = "aadde@unil.ch")
#Go to github page to generate token
usethis::create_github_token()
#paste your PAT into pop-up that follows...
credentials::set_github_pat()
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
library(nsdm)
help(nsdm.embedsel)
remove.packages("nsdm")
help(nsdm.embedsel)
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
imgurl <- system.file("C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/Figure1c.png/cat.png", package="hexSticker")
install.packages("hexSticker")
library("hexSticker")
imgurl <- system.file("C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/Figure1c.png/cat.png", package="hexSticker")
sticker(imgurl, package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/imgfile.png")
help(sticker)
imgurl <- readImage("C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/Figure1c.png/cat.png")
library(EBImage)
install.packages(EBImage)
install.packages("EBImage")
install.packages("png")
library(png)
imgurl <- readPNG("C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/Figure1c.png/cat.png")
imgurl <- readPNG("C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/Figure1c.png")
sticker(imgurl, package="hexSticker", p_size=20, s_x=1, s_y=.75, s_width=.6,
filename="C:/Users/Aadde/switchdrive/Private/work/manuscripts/core-pipeline/Figures/imgfile.png")
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
library(nsdm)
help("nsdm.covfilter")
help("nsdm.embedsel")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
help(install_github)
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions", dependencies =TRUE)
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions", dependencies =TRUE)
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
library(nsdm)
remove.packages("nsdm")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
library(nsdm)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
library(nsdm)
raster(x)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
#now remotes::install_github() will work
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions")
library(nsdm)
??which
help("which")
help(coef)
??as.data.frame
# Convert to spatial points
isp_name<-"Bombus terrestris"
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(data.table)
library(dplyr)
isp<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1.tsv")
# Convert to spatial points
isp_name<-"Bombus terrestris"
isp_sp<-isp_sp[grep(isp_name, isp$S),]
isp_sp<-isp[grep(isp_name, isp$S),]
isp_sp
isp<-fread("Z:/projects-ext/ValPar/00_BASE/10_data/infospecies/VALPAR_v1.tsv")
isp
grep(isp_name, isp$S)
# Convert to spatial points
isp_name<-"Bombus te"
# Convert to spatial points
isp_name<-"Bombus terestris"
grep(isp_name, isp$SCIENTIFICNAME)
# Convert to spatial points
isp_name<-"Bombus terrestris"
grep(isp_name, isp$SCIENTIFICNAME)
isp_sp<-isp[grep(isp_name, isp$SCIENTIFICNAME),]
isp_sp
table(isp_sp$COORDINATEUNCERTAINTYINMETERS)
s<-isp[grep(isp_name, isp$SCIENTIFICNAME),]
# Spatial point
suppressWarnings(loc_pts<-SpatialPointsDataFrame(coords=data.frame(s$SWISSCOORDINATE_X, s$SWISSCOORDINATE_Y),
data=data.frame(pa=rep(1,length(s$INSTITUTIONCODE))),
proj4string=CRS(st_crs("EPSG:21781")$proj4string)))
# Spatial point
library(sp)
suppressWarnings(loc_pts<-SpatialPointsDataFrame(coords=data.frame(s$SWISSCOORDINATE_X, s$SWISSCOORDINATE_Y),
data=data.frame(pa=rep(1,length(s$INSTITUTIONCODE))),
proj4string=CRS(st_crs("EPSG:21781")$proj4string)))
library(sf)
suppressWarnings(loc_pts<-SpatialPointsDataFrame(coords=data.frame(s$SWISSCOORDINATE_X, s$SWISSCOORDINATE_Y),
data=data.frame(pa=rep(1,length(s$INSTITUTIONCODE))),
proj4string=CRS(st_crs("EPSG:21781")$proj4string)))
writeOGR(loc_pts, dsn="C:/Users/Aadde/Desktop", layer="bombus", driver = "ESRI Shapefile", overwrite=T)
library(rgdal)
writeOGR(loc_pts, dsn="C:/Users/Aadde/Desktop/tmp", layer="bombus", driver = "ESRI Shapefile", overwrite=T)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
#now remotes::install_github() will work
detach("package:nsdm", unload = TRUE)
library(roxygen2)
library(roxygen2)
setwd("C:/Users/Aadde/switchdrive/Private/nsdm-git/scripts/nsdm-project/functions/")
roxygen2::roxygenise(clean = TRUE)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
setwd("C:/Users/Aadde/switchdrive/Private/nsdm-git/scripts/nsdm-project/functions/")
roxygen2::roxygenise(clean = TRUE)
#now remotes::install_github() will work
detach("package:nsdm", unload = TRUE)
remotes::install_github("AnAdde/N-SDM/scripts/nsdm-project/functions", force = TRUE)
nsdm.ceval
library(nsdm)
require(nsdm)
nsdm.ceval
nsdm.cov
#now remotes::install_github() will work
detach("package:nsdm", unload = TRUE)
.libPaths("C:/Users/Aadde/Documents/R/win-library/4.0.4")
library(nsdm)
